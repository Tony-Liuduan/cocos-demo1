{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","start","update","_dt","getPlayerDistance","onPicked","opacityRatio","game","timer","starDuration","minOpacity","node","opacity","Math","floor","player","getPosition","dist","position","sub","mag","spawnNewStar","gainScore","destroy"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACV;AACAC,gBAAY;AAFF,GAHL;;AAQP;;AAEAC,QAVO,oBAUE,CAAE,CAVJ;AAYPC,OAZO,mBAYC,CAAE,CAZH;AAcPC,QAdO,kBAcAC,GAdA,EAcK;AACV;AACA,QAAI,KAAKC,iBAAL,KAA2B,KAAKL,UAApC,EAAgD;AAC9C,WAAKM,QAAL;AACA;AACD;;AAED;AACA,QAAIC,eAAe,IAAI,KAAKC,IAAL,CAAUC,KAAV,GAAkB,KAAKD,IAAL,CAAUE,YAAnD;AACA,QAAIC,aAAa,EAAjB;AACA,SAAKC,IAAL,CAAUC,OAAV,GACEF,aAAaG,KAAKC,KAAL,CAAWR,gBAAgB,MAAMI,UAAtB,CAAX,CADf;AAED,GA1BM;AA4BPN,mBA5BO,+BA4Ba;AAClB;AACA,QAAIW,SAAS,KAAKR,IAAL,CAAUQ,MAAV,CAAiBC,WAAjB,EAAb;AACA;AACA,QAAIC,OAAO,KAAKN,IAAL,CAAUO,QAAV,CAAmBC,GAAnB,CAAuBJ,MAAvB,EAA+BK,GAA/B,EAAX;AACA,WAAOH,IAAP;AACD,GAlCM;AAoCPZ,UApCO,sBAoCI;AACT;AACA,SAAKE,IAAL,CAAUc,YAAV;AACA;AACA,SAAKd,IAAL,CAAUe,SAAV;AACA;AACA,SAAKX,IAAL,CAAUY,OAAV;AACD;AA3CM,CAAT","file":"Star.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    // 星星和主角之间的距离小于这个数值时，就会完成收集\n    pickRadius: 0,\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {},\n\n  start() {},\n\n  update(_dt) {\n    // 每帧判断星星和主角之间的距离是否小于收集距离\n    if (this.getPlayerDistance() < this.pickRadius) {\n      this.onPicked();\n      return;\n    }\n\n    // 根据 Game 脚本中的计时器更新星星的透明度\n    var opacityRatio = 1 - this.game.timer / this.game.starDuration;\n    var minOpacity = 50;\n    this.node.opacity =\n      minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n  },\n\n  getPlayerDistance() {\n    // 根据 player 节点位置判断距离\n    var player = this.game.player.getPosition();\n    // 根据两点位置计算两点之间距离\n    var dist = this.node.position.sub(player).mag();\n    return dist;\n  },\n\n  onPicked() {\n    // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n    this.game.spawnNewStar();\n    // 调用 Game 脚本的得分方法\n    this.game.gainScore();\n    // 然后销毁当前星星节点\n    this.node.destroy();\n  },\n});\n"]}