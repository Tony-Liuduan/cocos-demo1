{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","start","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","onLoad","jumpAction","node","runAction","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","dt","Math","abs","x","event","keyCode","macro","KEY","a","d","audioEngine","playEffect"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    // 主角跳跃高度，单位 px\n    jumpHeight: 0,\n    // 主角跳跃持续时间，单位 s\n    jumpDuration: 0,\n    // 最大移动速度\n    maxMoveSpeed: 0,\n    // 加速度\n    accel: 0,\n    // 跳跃音效资源\n    jumpAudio: {\n      default: null,\n      type: cc.AudioClip,\n    },\n\n    // foo: {\n    //     // ATTRIBUTES:\n    //     default: null,        // The default value will be used only when the component attaching\n    //                           // to a node for the first time\n    //     type: cc.SpriteFrame, // optional, default is typeof default\n    //     serializable: true,   // optional, default is true\n    // },\n    // bar: {\n    //     get () {\n    //         return this._bar;\n    //     },\n    //     set (value) {\n    //         this._bar = value;\n    //     }\n    // },\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n\n  start() {},\n\n  // update (dt) {},\n\n  setJumpAction() {\n    // 跳跃上升\n    var jumpUp = cc\n      .moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight))\n      .easing(cc.easeCubicActionOut());\n    // 下落\n    var jumpDown = cc\n      .moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight))\n      .easing(cc.easeCubicActionIn());\n\n    // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法，这个方法的返回值 — ActionInstant\n    // 使用 callFunc 调用回调函数可以让函数转变为 cc 中的 Action（动作）\n    // 让 callback 成为了一个播放声音的动作 Action\n    var callback = cc.callFunc(this.playJumpSound, this);\n    // 不断重复\n    return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n  },\n\n  // 在场景加载后立刻执行\n  onLoad() {\n    // 初始化跳跃动作\n    this.jumpAction = this.setJumpAction();\n    // 调用这个组件挂载的节点下的 runAction 方法\n    this.node.runAction(this.jumpAction);\n\n    // 加速度方向开关\n    this.accLeft = false;\n    this.accRight = false;\n    // 主角当前水平方向速度\n    this.xSpeed = 0;\n\n    // 初始化键盘输入监听，通过 systemEvent 来监听系统 全局 事件\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  },\n\n  onDestroy() {\n    // 取消键盘输入监听\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  },\n\n  // 在场景加载后就会每帧调用一次\n  // dt: 渲染一帧的耗时\n  update(dt) {\n    // 根据当前加速度方向每帧更新速度\n    if (this.accLeft) {\n      this.xSpeed -= this.accel * dt;\n    } else if (this.accRight) {\n      this.xSpeed += this.accel * dt;\n    }\n\n    // 限制主角最大速度不能超过最大值\n    if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n      // use maxMoveSpeed;\n      this.xSpeed = (this.maxMoveSpeed * this.xSpeed) / Math.abs(this.xSpeed);\n    }\n\n    // 根据当前速度更新主角的位置\n    this.node.x += this.xSpeed * dt;\n  },\n\n  // 添加键盘事件响应函数\n  onKeyDown(event) {\n    switch (event.keyCode) {\n      case cc.macro.KEY.a:\n        this.accLeft = true;\n        break;\n      case cc.macro.KEY.d:\n        this.accRight = true;\n        break;\n    }\n  },\n  onKeyUp(event) {\n    switch (event.keyCode) {\n      case cc.macro.KEY.a:\n        this.accLeft = false;\n        break;\n      case cc.macro.KEY.d:\n        this.accRight = false;\n        break;\n    }\n  },\n\n  playJumpSound: function () {\n    // 调用声音引擎播放声音\n    cc.audioEngine.playEffect(this.jumpAudio, false);\n  },\n});\n"]}